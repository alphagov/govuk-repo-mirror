#! /usr/bin/env ruby

require 'bundler/setup'
require 'aws-sdk-codecommit'

# Aws::CodeCommit::Client#create_repository doesn't set the default branch
# This script is optionally used to update the default branch for existing repos.
#
aws_cc_client = Aws::CodeCommit::Client.new(
  access_key_id: ENV.fetch('AWS_ACCESS_KEY_ID'),
  secret_access_key: ENV.fetch('AWS_SECRET_ACCESS_KEY'),
  session_token: ENV.fetch('AWS_SESSION_TOKEN', nil),
  region: ENV.fetch('AWS_REGION'),
)

aws_cc_repos = []
next_token = nil

loop do
  aws_response = aws_cc_client.list_repositories(next_token: next_token)
  aws_cc_repos << aws_response.repositories.map(&:repository_name)
  next_token = aws_response.next_token
  break unless next_token
end

aws_cc_repos.flatten.each do |repo_name|
  target_default_branch = "master"

  begin
    resp = aws_cc_client.get_branch(repository_name: repo_name, branch_name: "main")
    target_default_branch = "main"
  rescue Aws::CodeCommit::Errors::BranchDoesNotExistException
    puts "Main branch does not exist, will set default branch to master."
  end

  begin
    puts "Getting current default branch for #{repo_name} repo"
    resp = aws_cc_client.get_repository(repository_name: repo_name)
    current_default_branch = resp.repository_metadata.default_branch

    if current_default_branch && current_default_branch != target_default_branch
      puts "Repo #{repo_name} has default branch: #{current_default_branch}, updating to '#{target_default_branch}'"
      aws_cc_client.update_default_branch(default_branch_name: target_default_branch, repository_name: repo_name)
    end
  rescue Aws::CodeCommit::Errors::BranchDoesNotExistException
    puts "Default branch not set since '#{target_default_branch}' does not exist"
  end

  sleep 2
end
